import pygame
import random
 
# Define some colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
RED = (255, 0, 0)
BLUE = (0, 0, 255)
 
# --- Classes
 
 
class Block(pygame.sprite.Sprite):
    """ This class represents the block. """
    def __init__(self, color):
        # Call the parent class (Sprite) constructor
        super().__init__()
 
        self.image = pygame.image.load("3.png")
        #self.image.fill(color)
 
        self.rect = self.image.get_rect()

class Block2(pygame.sprite.Sprite):
    """ This class represents the block. """
    def __init__(self, color):
        # Call the parent class (Sprite) constructor
        super().__init__()
 
        self.image = pygame.image.load("Scorpion.png")
        #self.image.fill(color)
 
        self.rect = self.image.get_rect()
 
 
class Player(pygame.sprite.Sprite):
    """ This class represents the Player. """
 
    def __init__(self):
        """ Set up the player on creation. """
        # Call the parent class (Sprite) constructor
        super().__init__()
 
        self.image = pygame.image.load("2. Panzer.PNG").convert_alpha()
 
        self.rect = self.image.get_rect()
 
    def update(self):
        """ Update the player's position. """
        # Get the current mouse position. This returns the position
        # as a list of two numbers.
        pos = pygame.mouse.get_pos() 
 
        # Set the player x position to the mouse x position
        self.rect.x = pos[0] + -35
 
 
class Bullet(pygame.sprite.Sprite):
    """ This class represents the bullet . """
    def __init__(self):
        # Call the parent class (Sprite) constructor
        super().__init__()
 
        #self.image = pygame.Surface([4, 10])
        self.image = pygame.image.load("new_bullet.png").convert_alpha()
 
        self.rect = self.image.get_rect()
 
    def update(self):
        """ Move the bullet. """
        self.rect.y -= 3
 
 
# --- Create the window
 
# Initialize Pygame
pygame.init()
 
 
# --- Sprite lists
 
# This is a list of every sprite. All blocks and the player block as well.
all_sprites_list = pygame.sprite.Group()
 
# List of each enemy in the game
block_list = pygame.sprite.Group()
scorpion_list = pygame.sprite.Group()
 
# List of each bullet
bullet_list = pygame.sprite.Group()

# Set the height and width of the screen
WIDTH = 900
HEIGHT = 358
FPS = 60
screen = pygame.display.set_mode((WIDTH, HEIGHT))

background = pygame.image.load("Backround.png")
pos = (0,0)

#Fenster Name 
pygame.display.set_caption("Kill The Enemy ;D")

#gegner positionen 


 
# --- Create the sprites
 
for i in range(10):
    # This represents a block
    block = Block(BLUE)
 
    # Set a random location for the block
    gegPos=random.randrange(1,15)
    print(gegPos)
    if gegPos == 1:
        block.rect.x = 423
        block.rect.y = 107
        print("1")
    elif gegPos == 2: 
        block.rect.x = 320
        block.rect.y = 115
        print("2")
    elif gegPos == 3:
        block.rect.x = 280
        block.rect.y = 140
        print("3")
    elif gegPos == 4:
        block.rect.x = 245
        block.rect.y = 120
        print("4")
    elif gegPos == 5:
        block.rect.x = 260
        block.rect.y = 280
        print("5")
    elif gegPos == 6:
        block.rect.x = 500
        block.rect.y = 30
    elif gegPos == 7: 
        block.rect.x = 530
        block.rect.y = 200
        print("7")
    elif gegPos == 8:
        block.rect.x = 680
        block.rect.y = 150
        print("8")
    elif gegPos == 9:
        block.rect.x = 588
        block.rect.y = 180
        print("9")
    elif gegPos == 10:
        block.rect.x = 450
        block.rect.y = 270
        print("10")
    elif gegPos == 11:
        block.rect.x = 120
        block.rect.y = 20
        print("11")
    elif gegPos == 12: 
        block.rect.x = 120
        block.rect.y = 75
        print("12")
    elif gegPos == 13:
        block.rect.x = 120
        block.rect.y = 75
        print("13")
    elif gegPos == 14:
        block.rect.x = 155
        block.rect.y = 225
        print("14")
    elif gegPos == 15:
        print("15")
    # Add the block to the list of objects
    block_list.add(block)
    all_sprites_list.add(block)

for i in range(3):
    scorpion = Block2(BLUE)
    scorpionPos = 3
    if scorpionPos == 3:
        scorpion.rect.x = 120
        scorpion.rect.y = 200
    elif scorpionPos == 2:
        scorpion.rect.x = 550
        scorpion.rect.y = 200
    elif scorpionPos == 1:
        scorpion.rect.x = 150
        scorpion.rect.y = 230
    scorpionPos = scorpionPos - 1
    scorpion_list.add(scorpion)
    all_sprites_list.add(scorpion)

 
# Create a red player block
player = Player()
all_sprites_list.add(player)
 
# Loop until the user clicks the close button.
done = False
 
# Used to manage how fast the screen updates
clock = pygame.time.Clock()
 
score = 0
player.rect.y = 300
 
# -------- Main Program Loop -----------
while not done:
    # --- Event Processing
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            done = True
 
        elif event.type == pygame.MOUSEBUTTONDOWN:
            # Fire a bullet if the user clicks the mouse button
            bullet = Bullet()
            # Set the bullet so it is where the player is
            bullet.rect.x = player.rect.x + 34
            bullet.rect.y = player.rect.y 
            # Add the bullet to the lists
            all_sprites_list.add(bullet)
            bullet_list.add(bullet)
 
    # --- Game logic
 
    # Call the update() method on all the sprites
    all_sprites_list.update()

    #Bildschirm/Hintergrund
    screen.blit(background, pos)
    #pygame.display.flip()
    # Calculate mechanics for each bullet
    for bullet in bullet_list:
 
        # See if it hit a block
        block_hit_list = pygame.sprite.spritecollide(bullet, block_list, True)
 
        # For each block hit, remove the bullet and add to the score
        for block in block_hit_list:
            bullet_list.remove(bullet)
            all_sprites_list.remove(bullet)
            score += 1
            print(score)

    for bullet in bullet_list:
 
        # See if it hit a block
        scorpion_hit_list = pygame.sprite.spritecollide(bullet, scorpion_list, True)
 
        # For each block hit, remove the bullet and add to the score
        for block in block_hit_list:
            bullet_list.remove(bullet)
            all_sprites_list.remove(bullet)
            score += 1
            print(score)
 
        # Remove the bullet if it flies up off the screen
        if bullet.rect.y < -10:
            bullet_list.remove(bullet)
            all_sprites_list.remove(bullet)

 
    # --- Draw a frame
 
    
 
    # Draw all the spites
    all_sprites_list.draw(screen)
 
    # Go ahead and update the screen with what we've drawn.
    pygame.display.flip()
    # --- Limit to 20 frames per second
    clock.tick(60)
 
pygame.quit()
